# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Zircon manifests
#
# This file contains references to binaries either built by the Zircon GN build
# (`legacy-foo` targets) or migrated from that build into the Fuchsia GN build
# (`migrated-foo` targets).

import("//build/unification/future/data/fini_manifest.gni")
import("aggregate_manifest.gni")
import("artifacts.gni")
import("zircon_artifact.gni")

foreach(artifact, zircon_artifacts) {
  zircon_artifact(artifact.name) {
    contents = artifact.lines

    deps = artifact.deps
  }
}

group("images") {
  deps = [
    ":legacy-aux",
    ":legacy-image",
    ":legacy-tests",
    ":migrated-aux",
    ":migrated-image",
    ":migrated-tests",
  ]
}

###############################################################################
# Legacy manifests
#
# These manifests mirror the manifests generated by the ZN build.
#
# Edit these targets if:
#  - a new binary was recently added to the ZN build and needs to be referred
#    to in the GN build - the edit is an addition;
#  - a binary is being migrated from the ZN build into the GN build - the edit
#    should be a removal.

aggregate_manifest("legacy-image") {
  # Though without any dependency, this target is being kept around as its
  # output is needed by support scripts.
  deps = []
}

# IMPORTANT NOTE: this target is now frozen, please do not add any more
# dependencies to it.
aggregate_manifest("legacy-aux") {
  deps = [
    ":lib.c",
    ":test.sys.libc-test",
    ":test.sys.noop-test",
#    ":test.sys.noop-test.asan",
#    ":test.sys.noop-test.asan-ubsan",
#    ":test.sys.noop-test.profile",
#    ":test.sys.noop-test.sancov",
#    ":test.sys.noop-test.ubsan",
#    ":test.sys.noop-test.ubsan-sancov",
#    ":test.sys.noop-test.ubsan-sancov-full",
  ]

  reference = "legacy-aux-$target_cpu"
}

# IMPORTANT NOTE: this target is now frozen, please do not add any more
# dependencies to it.
aggregate_manifest("legacy-tests") {
  deps = [
    ":test.sys.libc-test",
    ":test.sys.noop-test",
#    ":test.sys.noop-test.asan",
#    ":test.sys.noop-test.asan-ubsan",
#    ":test.sys.noop-test.profile",
#    ":test.sys.noop-test.sancov",
#    ":test.sys.noop-test.ubsan",
#    ":test.sys.noop-test.ubsan-sancov",
#    ":test.sys.noop-test.ubsan-sancov-full",
  ]

  reference = "legacy-tests-$target_cpu"
}

###############################################################################
# Migrated manifests
#
# These manifests list binaries that were migrated from the ZN build into the
# GN build.
#
# Edit these targets if:
#  - a binary is being migrated from the ZN build into the GN build - the edit
#    should be an addition;
#  - a formerly migrated binary is being better integrated into the GN build
#    using idiomatic constructs - the edit should be a removal.

fini_manifest("migrated-image") {
  # Use the same naming scheme as `aggregate_manifest`.
  outputs = [ "$target_out_dir/$target_name.unification.manifest" ]

  deps = []
}

fini_manifest("migrated-aux") {
  # Use the same naming scheme as `aggregate_manifest`.
  outputs = [ "$target_out_dir/$target_name.unification.manifest" ]

  deps = []
}

fini_manifest("migrated-tests") {
  # Use the same naming scheme as `aggregate_manifest`.
  outputs = [ "$target_out_dir/$target_name.unification.manifest" ]

  deps = []
}
